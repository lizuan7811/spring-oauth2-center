plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.9'
	id 'io.spring.dependency-management' version '1.1.0'
    id 'application'
}

sourceCompatibility = '11'
def archiveVersion ='0.0.1'
def archiveFileName='spring-boot-oath2'
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
compileJava.dependsOn('clearDist')
task clearDist() {
	delete "$buildDir/libs"
}
test.enabled = false
tasks.withType(JavaCompile){
	options.encoding="UTF-8"
}
/*	sourceSets {
	    main {
		        java {
		            srcDirs = ['lib/src/main/java']
		        }
		        resources {
		            srcDirs = ['lib/src/main/resources/']
		        }
	    	}
		}
		*/
repositories {
	mavenCentral()
	maven { url 'https://repo.huaweicloud.com/repository/maven/'}
	maven { url 'https://maven.google.com/' }
	maven { url 'https://repo.maven.apache.org/maven2/' }
}

dependencies {
//	implementation 'org.springframework.cloud:spring-cloud-starter'
	compileOnly 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-parent:2.6.9'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//***REDIS***
	implementation 'org.springframework.data:spring-data-redis'
	implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.6.9'

	implementation 'org.springframework.security.oauth:spring-security-oauth2:2.5.2.RELEASE'
	
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-client
	implementation 'org.springframework.security:spring-security-oauth2-client:5.8.0'
	
	implementation 'org.springframework.boot:spring-boot-starter-jersey'
	
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.security:spring-security-web'
	implementation 'org.springframework.security:spring-security-jwt:1.1.1.RELEASE'
	
	// https://mvnrepository.com/artifact/org.jboss.resteasy/resteasy-jackson2-provider
	implementation 'org.jboss.resteasy:resteasy-jackson2-provider:4.7.4.Final'

	implementation 'org.keycloak:keycloak-dependencies-server-all:20.0.2'
	// https://mvnrepository.com/artifact/org.keycloak/keycloak-spring-boot-starter
	//implementation 'org.keycloak:keycloak-spring-boot-starter:20.0.2'
	// https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils
	implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'

	// https://mvnrepository.com/artifact/org.jsoup/jsoup
	implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.4'


 	implementation fileTree(dir: 'libs', include: ['*.jar'])
 	// https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-client
	implementation group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.39.1'
 	// https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-common
	implementation group: 'org.glassfish.jersey.core', name: 'jersey-common', version: '2.39.1'
 	// https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-json-jackson
	implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.39.1'
 	// https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api
	implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '2.1.1'
 	// https://mvnrepository.com/artifact/org.glassfish.jersey.inject/jersey-hk2
	implementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.39.1'
	// https://mvnrepository.com/artifact/org.jboss.resteasy/resteasy-jaxrs
	implementation group: 'org.jboss.resteasy', name: 'resteasy-jaxrs', version: '3.14.0.Final'
	// https://mvnrepository.com/artifact/org.jboss.resteasy/resteasy-jackson2-provider
	implementation group: 'org.jboss.resteasy', name: 'resteasy-jackson2-provider', version: '6.2.3.Final'
	// https://mvnrepository.com/artifact/org.jboss.resteasy/resteasy-client
	implementation group: 'org.jboss.resteasy', name: 'resteasy-client', version: '6.2.3.Final'
	// https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api
	implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.0'
	implementation group: 'jakarta.ws.rs', name: 'jakarta.ws.rs-api', version: '3.1.0'
    //implementation 'org.springframework.security:spring-security-oauth2-jose:5.4.0'
	// https://mvnrepository.com/artifact/org.webjars/bootstrap
	implementation 'org.webjars:bootstrap:5.2.3'
	implementation 'org.webjars:jquery:3.6.4'
	implementation 'org.webjars:webjars-locator-core:0.52'
	annotationProcessor 'org.projectlombok:lombok'
	//DB
	// https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc
	implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '12.2.0.jre11'
	// https://mvnrepository.com/artifact/org.jfree/jfreechart
	implementation 'org.jfree:jfreechart:1.5.4'
	
	// https://mvnrepository.com/artifact/sshtools/j2ssh-core
	implementation group: 'sshtools', name: 'j2ssh-core', version: '0.2.9'
	// https://mvnrepository.com/artifact/sshtools/j2ssh-common
	implementation group: 'sshtools', name: 'j2ssh-common', version: '0.2.9'
	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf
	//implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.6.9'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-resource-server
	//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server:3.0.5'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-client
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.0.5'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-client
	//implementation 'org.springframework.security:spring-security-oauth2-client:6.0.2'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-jose
	//implementation 'org.springframework.security:spring-security-oauth2-jose:6.0.2'
	// https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-client
	//	implementation 'org.glassfish.jersey.core:jersey-client:3.1.1'
	//compile 'pl.zankowski:iextrading4j-all:3.4.5'
	// https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api
	//compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.0.0'
	// https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api
	//implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.1.0'
	// https://mvnrepository.com/artifact/jakarta.platform/jakarta.jakartaee-api
	//compileOnly group: 'jakarta.platform', name: 'jakarta.jakartaee-api', version: '10.0.0'
	// https://mvnrepository.com/artifact/jakarta.ws.rs/jakarta.ws.rs-api
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-jose
	//implementation 'org.springframework.security:spring-security-oauth2-core:6.0.2'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-authorization-server
	// implementation 'org.springframework.security:spring-security-oauth2-authorization-server:1.0.1'
	// testImplementation 'org.springframework.security:spring-security-test'

	}
	
	def envList=[]
	
	ext.getTaskName = { ->
	println "project.gradle.startParameter.taskNames[0]\t"+project.gradle.startParameter.taskNames[0]
	
	return project.gradle.startParameter.taskNames[0]? project.gradle.startParameter.taskNames[0] : ''
	}
	
	ext.getRuntimeEnvironment = { ->
	    	def envName = getTaskName()
			def taskName = getTaskName()
			return envName
	}
	
	task copyLib(type: Copy) {
	    from configurations.compileClasspath
	    into "$buildDir/libs/lib"
	}
	
	fileTree("src/main/resources") {
    include "application*.yml"
		}.each { file ->
		    def propertyName = file.name
		    println propertyName
		    String envName = propertyName.substring(0, propertyName.lastIndexOf(".yml"))
		    envList.add('-' + envName)
		}
	
	task build_dev(dependsOn: ['build']) {
	    group = 'build_dev'
	    description = "Assembles and tests this project for dev"
	}

	task bootRun_dev(dependsOn: ['bootRun']) {
	    group = 'application_dev'
	    description = "Runs this project as a Spring Boot application for dev"
	}
	
		task build_ut(dependsOn: ['build']) {
	    group = 'build_ut'
	    description = "Assembles and tests this project for ut"
	}

	task bootRun_ut(dependsOn: ['bootRun']) {
	    group = 'application_ut'
	    description = "Runs this project as a Spring Boot application for ut"
	}
	
	task {
	    all {
	        if (it.name.endsWith("_dev")) {
	            it.dependsOn(build-dev)
	            it.dependsOn(bootRun-dev)
	        }
			if (it.name.endsWith("_ut")) {
	            it.dependsOn(build-ut)
	            it.dependsOn(bootRun-ut)
	        }
	    }
	}
	
task copySource(type: Copy){
	def envName = getRuntimeEnvironment();
	def envArr = envList
	def index = envArr.indexOf('-'+envName)
	if(index>=0){
		envArr.remove(index)
	}
	
	println ">>> exclude enviroment list: ${envArr}"
	
	from("src/main/resources"){
		eachFile{f -> 
				def propertyName = f.name
				println ">>> envName : "+envName;
				if(envArr.any{propertyName.contains(it.substring(1)) && !propertyName.contains(envName.substring(envName.indexOf('_')+1))}) {
			    	f.exclude()
				}
				if(envName.contains('dev') && propertyName.contains(envName.substring(envName.indexOf('_')+1))){
					f.include();
				}
			}
		}
		into "$buildDir/libs/config"
	}
	/*
	build {
		//baseName = "${archiveFileName}-${archiveVersion}-RELEASE"
		
		doFirst {
			manifest {
		   		attributes 'Main-Class': "org.springframework.boot.loader.JarLauncher"
		        attributes 'Start-Class': 'spring-boot-oath2.spring.boot.oath2.ExecCraw'
		    }
		        println '[INFO] Exclude resource, jar file'
		        // 排除资源文件
		
		        //println '[INFO] Copy lib jar file'
		        // 将依赖的 JAR 文件复制到指定路径
		        //copyLib.dependsOn(compileJava)
		
		        //println '[INFO] Copy resource file'
		        // 将资源文件复制到指定路径
		        //copySource.dependsOn(compileJava)
		
		    }
		        // 设置 Release JAR 放置目录
		    outputs.dir("$buildDir/libs/lib")
	}
	*/
	jar{
		enabled = false
	}
	
	bootJar {
	 	enabled = true
		//archiveFileName = "${archiveFileName}-${archiveVersion}-RELEASE"
		baseName = "${archiveFileName}-${archiveVersion}-RELEASE"
		manifest {
		   		attributes 'Main-Class': "org.springframework.boot.loader.JarLauncher"
		        attributes 'Start-Class': 'spring.boot.oath2.ExecCraw'
		    }
		    mainClassName = 'org.springframework.boot.loader.JarLauncher'
		    
		    // Main Class pull out to BOOT-INF dir
		    println '[INFO] Exclude resource, jar file'
		    // 排除 resource 相關設定檔、dependencies 相關 jar file
		    rootSpec.exclude('**/*.yml', '**/*.conf', '**/*.xml', '**/*.properties','*.yaml','*templates*','*.html')
	
		    println '[INFO] Copy lib jar file'
		    // 將 dependencies jar file 複製至指定路徑
		    compileJava.dependsOn('copyLib')
	
		    println '[INFO] Copy resource file'
		    // 將 Resource file 複製至指定路徑
		    compileJava.dependsOn('copySource')
		    // 設定 Relese jar 放置目錄
			//outputs.dir("$buildDir/libs/lib")	
			
	}
	/*
	bootJar {
	    mainClass = 'org.springframework.boot.loader.JarLauncher'
	}

	bootRun {
	    mainClass = 'org.springframework.boot.loader.JarLauncher'
	}
*/
	application {
	    applicationDefaultJvmArgs = ['-Xmx512m', '-XX:MaxPermSize=512m', '-Dinm.testmode=true', '-Dfile.encoding=UTF-8', '-Xdebug','-Xrunjdwp:transport=dt_socket,server=y,address=7979,suspend=n']
	//	args = ["skipStartupError=true"]
	}
